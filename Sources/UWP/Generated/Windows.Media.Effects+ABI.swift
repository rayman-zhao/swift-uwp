// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition: WindowsFoundation.IID {
    .init(Data1: 0xE4D7F974, Data2: 0x7D80, Data3: 0x4F73, Data4: ( 0x90,0x89,0xE3,0x1C,0x9D,0xB9,0xC2,0x94 ))// E4D7F974-7D80-4F73-9089-E31C9DB9C294
}

public enum __ABI_Windows_Media_Effects {
    public class IAudioEffectDefinition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition }

        open func get_ActivatableClassIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ActivatableClassId(pThis, &value))
            }
            return .init(from: value)
        }

        open func get_PropertiesImpl() throws -> WindowsFoundation.AnyIPropertySet? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinition.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Properties(pThis, &valueAbi))
                }
            }
            return __ABI_Windows_Foundation_Collections.IPropertySetWrapper.unwrapFrom(abi: value)
        }

    }

    internal static var IAudioEffectDefinitionVTable: __x_ABI_CWindows_CMedia_CEffects_CIAudioEffectDefinitionVtbl = .init(
        QueryInterface: { IAudioEffectDefinitionWrapper.queryInterface($0, $1, $2) },
        AddRef: { IAudioEffectDefinitionWrapper.addRef($0) },
        Release: { IAudioEffectDefinitionWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Windows_Media_Effects.IAudioEffectDefinitionWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Windows.Media.Effects.IAudioEffectDefinition").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        get_ActivatableClassId: {
            guard let __unwrapped__instance = IAudioEffectDefinitionWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.activatableClassId
            $1?.initialize(to: try! HString(value).detach())
            return S_OK
        },

        get_Properties: {
            guard let __unwrapped__instance = IAudioEffectDefinitionWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.properties
            let valueWrapper = __ABI_Windows_Foundation_Collections.IPropertySetWrapper(value)
            valueWrapper?.copyTo($1)
            return S_OK
        }
    )

    public typealias IAudioEffectDefinitionWrapper = InterfaceWrapperBase<__IMPL_Windows_Media_Effects.IAudioEffectDefinitionBridge>
}
